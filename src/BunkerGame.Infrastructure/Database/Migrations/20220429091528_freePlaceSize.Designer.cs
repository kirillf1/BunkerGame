// <auto-generated />
using System;
using BunkerGame.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BunkerGame.Infrastructure.Migrations
{
    [DbContext(typeof(BunkerGameDbContext))]
    [Migration("20220429091528_freePlaceSize")]
    partial class freePlaceSize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BunkerBunkerObject", b =>
                {
                    b.Property<int>("BunkerObjectsId")
                        .HasColumnType("integer");

                    b.Property<int>("BunkersId")
                        .HasColumnType("integer");

                    b.HasKey("BunkerObjectsId", "BunkersId");

                    b.HasIndex("BunkersId");

                    b.ToTable("BunkerBunkerObject");
                });

            modelBuilder.Entity("BunkerGame.Domain.Bunkers.Bunker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BunkerEnviromentId")
                        .HasColumnType("integer");

                    b.Property<double>("BunkerSize")
                        .HasColumnType("double precision");

                    b.Property<int>("BunkerWallId")
                        .HasColumnType("integer");

                    b.Property<long?>("GameSessionId")
                        .HasColumnType("bigint");

                    b.Property<int>("SuppliesYear")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BunkerEnviromentId");

                    b.HasIndex("BunkerWallId");

                    b.HasIndex("GameSessionId")
                        .IsUnique();

                    b.ToTable("Bunkers", (string)null);
                });

            modelBuilder.Entity("BunkerGame.Domain.Bunkers.BunkerComponents.BunkerEnviroment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EnviromentBehavior")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("EnviromentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("BunkerEnviroments");
                });

            modelBuilder.Entity("BunkerGame.Domain.Bunkers.BunkerComponents.BunkerObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BunkerObjectType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("BunkerObjects");
                });

            modelBuilder.Entity("BunkerGame.Domain.Bunkers.BunkerComponents.BunkerWall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BunkerState")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("BunkerWalls");
                });

            modelBuilder.Entity("BunkerGame.Domain.Bunkers.BunkerComponents.ItemBunker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ItemBunkerType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("ItemBunkers");
                });

            modelBuilder.Entity("BunkerGame.Domain.Catastrophes.Catastrophe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CatastropheType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("DestructionPercent")
                        .HasColumnType("smallint");

                    b.Property<int>("HidingTerm")
                        .HasColumnType("integer");

                    b.Property<short>("SurvivedPopulationPercent")
                        .HasColumnType("smallint");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Catastrophes");
                });

            modelBuilder.Entity("BunkerGame.Domain.Characters.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AdditionalInformationId")
                        .HasColumnType("integer");

                    b.Property<byte>("CharacterNumber")
                        .HasColumnType("smallint");

                    b.Property<byte>("ExperienceHobby")
                        .HasColumnType("smallint");

                    b.Property<byte>("ExperienceProfession")
                        .HasColumnType("smallint");

                    b.Property<long?>("GameSessionId")
                        .HasColumnType("bigint");

                    b.Property<int>("HealthId")
                        .HasColumnType("integer");

                    b.Property<int>("HobbyId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsAlive")
                        .HasColumnType("boolean");

                    b.Property<int>("PhobiaId")
                        .HasColumnType("integer");

                    b.Property<long?>("PlayerId")
                        .HasColumnType("bigint");

                    b.Property<int>("ProfessionId")
                        .HasColumnType("integer");

                    b.Property<int>("TraitId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AdditionalInformationId");

                    b.HasIndex("GameSessionId");

                    b.HasIndex("HealthId");

                    b.HasIndex("HobbyId");

                    b.HasIndex("PhobiaId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("ProfessionId");

                    b.HasIndex("TraitId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("BunkerGame.Domain.Characters.CharacterComponents.AdditionalInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AddInfType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsBalance")
                        .HasColumnType("boolean");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("AdditionalInformations", (string)null);
                });

            modelBuilder.Entity("BunkerGame.Domain.Characters.CharacterComponents.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("IsBalance")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSpecial")
                        .HasColumnType("boolean");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Cards", (string)null);
                });

            modelBuilder.Entity("BunkerGame.Domain.Characters.CharacterComponents.CharacterItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CharacterItemType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsBalance")
                        .HasColumnType("boolean");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("CharacterItems", (string)null);
                });

            modelBuilder.Entity("BunkerGame.Domain.Characters.CharacterComponents.Health", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HealthType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("IsBalance")
                        .HasColumnType("boolean");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Healths", (string)null);
                });

            modelBuilder.Entity("BunkerGame.Domain.Characters.CharacterComponents.Hobby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HobbyType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("IsBalance")
                        .HasColumnType("boolean");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Hobbies", (string)null);
                });

            modelBuilder.Entity("BunkerGame.Domain.Characters.CharacterComponents.Phobia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsBalance")
                        .HasColumnType("boolean");

                    b.Property<string>("PhobiaDebuffType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Phobias", (string)null);
                });

            modelBuilder.Entity("BunkerGame.Domain.Characters.CharacterComponents.Profession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CardId")
                        .HasColumnType("integer");

                    b.Property<int?>("CharacterItemId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsBalance")
                        .HasColumnType("boolean");

                    b.Property<string>("ProfessionSkill")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ProfessionType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("CharacterItemId");

                    b.ToTable("Professions", (string)null);
                });

            modelBuilder.Entity("BunkerGame.Domain.Characters.CharacterComponents.Trait", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsBalance")
                        .HasColumnType("boolean");

                    b.Property<string>("TraitType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Traits", (string)null);
                });

            modelBuilder.Entity("BunkerGame.Domain.GameResults.GameResult", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ConversationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<long>("LostGames")
                        .HasColumnType("bigint");

                    b.Property<long>("WinGames")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("GameResults");
                });

            modelBuilder.Entity("BunkerGame.Domain.GameSessions.ExternalSurroundings.ExternalSurrounding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SurroundingType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("ExternalSurroundings");
                });

            modelBuilder.Entity("BunkerGame.Domain.GameSessions.GameSession", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<int>("CatastropheId")
                        .HasColumnType("integer");

                    b.Property<byte>("ChangedPlaceSize")
                        .HasColumnType("smallint");

                    b.Property<byte>("FreePlaceSize")
                        .HasColumnType("smallint");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("GameState")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("CatastropheId");

                    b.ToTable("GameSessions");
                });

            modelBuilder.Entity("BunkerGame.Domain.Players.Player", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("LoseGames")
                        .HasColumnType("integer");

                    b.Property<int>("WinGames")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("BunkerItemBunker", b =>
                {
                    b.Property<int>("BunkersId")
                        .HasColumnType("integer");

                    b.Property<int>("ItemBunkersId")
                        .HasColumnType("integer");

                    b.HasKey("BunkersId", "ItemBunkersId");

                    b.HasIndex("ItemBunkersId");

                    b.ToTable("BunkerItemBunker");
                });

            modelBuilder.Entity("CardCharacter", b =>
                {
                    b.Property<int>("CardsId")
                        .HasColumnType("integer");

                    b.Property<int>("CharactersId")
                        .HasColumnType("integer");

                    b.HasKey("CardsId", "CharactersId");

                    b.HasIndex("CharactersId");

                    b.ToTable("CardCharacter");
                });

            modelBuilder.Entity("CharacterCharacterItem", b =>
                {
                    b.Property<int>("CharacterItemsId")
                        .HasColumnType("integer");

                    b.Property<int>("CharactersId")
                        .HasColumnType("integer");

                    b.HasKey("CharacterItemsId", "CharactersId");

                    b.HasIndex("CharactersId");

                    b.ToTable("CharacterCharacterItem");
                });

            modelBuilder.Entity("ExternalSurroundingGameSession", b =>
                {
                    b.Property<int>("ExternalSurroundingsId")
                        .HasColumnType("integer");

                    b.Property<long>("GameSessionsId")
                        .HasColumnType("bigint");

                    b.HasKey("ExternalSurroundingsId", "GameSessionsId");

                    b.HasIndex("GameSessionsId");

                    b.ToTable("ExternalSurroundingGameSession");
                });

            modelBuilder.Entity("BunkerBunkerObject", b =>
                {
                    b.HasOne("BunkerGame.Domain.Bunkers.BunkerComponents.BunkerObject", null)
                        .WithMany()
                        .HasForeignKey("BunkerObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BunkerGame.Domain.Bunkers.Bunker", null)
                        .WithMany()
                        .HasForeignKey("BunkersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BunkerGame.Domain.Bunkers.Bunker", b =>
                {
                    b.HasOne("BunkerGame.Domain.Bunkers.BunkerComponents.BunkerEnviroment", "BunkerEnviroment")
                        .WithMany()
                        .HasForeignKey("BunkerEnviromentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BunkerGame.Domain.Bunkers.BunkerComponents.BunkerWall", "BunkerWall")
                        .WithMany()
                        .HasForeignKey("BunkerWallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BunkerGame.Domain.GameSessions.GameSession", null)
                        .WithOne("Bunker")
                        .HasForeignKey("BunkerGame.Domain.Bunkers.Bunker", "GameSessionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("BunkerEnviroment");

                    b.Navigation("BunkerWall");
                });

            modelBuilder.Entity("BunkerGame.Domain.Characters.Character", b =>
                {
                    b.HasOne("BunkerGame.Domain.Characters.CharacterComponents.AdditionalInformation", "AdditionalInformation")
                        .WithMany()
                        .HasForeignKey("AdditionalInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BunkerGame.Domain.GameSessions.GameSession", "GameSession")
                        .WithMany("Characters")
                        .HasForeignKey("GameSessionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BunkerGame.Domain.Characters.CharacterComponents.Health", "Health")
                        .WithMany()
                        .HasForeignKey("HealthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BunkerGame.Domain.Characters.CharacterComponents.Hobby", "Hobby")
                        .WithMany()
                        .HasForeignKey("HobbyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BunkerGame.Domain.Characters.CharacterComponents.Phobia", "Phobia")
                        .WithMany()
                        .HasForeignKey("PhobiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BunkerGame.Domain.Players.Player", null)
                        .WithMany("Characters")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BunkerGame.Domain.Characters.CharacterComponents.Profession", "Profession")
                        .WithMany()
                        .HasForeignKey("ProfessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BunkerGame.Domain.Characters.CharacterComponents.Trait", "Trait")
                        .WithMany()
                        .HasForeignKey("TraitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("BunkerGame.Domain.Characters.CharacterComponents.Age", "Age", b1 =>
                        {
                            b1.Property<int>("CharacterId")
                                .HasColumnType("integer");

                            b1.Property<int>("Count")
                                .HasColumnType("integer");

                            b1.HasKey("CharacterId");

                            b1.ToTable("Characters");

                            b1.WithOwner()
                                .HasForeignKey("CharacterId");
                        });

                    b.OwnsMany("BunkerGame.Domain.Characters.CharacterComponents.Cards.UsedCard", "UsedCards", b1 =>
                        {
                            b1.Property<int>("CharacterId")
                                .HasColumnType("integer");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<int>("CardId")
                                .HasColumnType("integer");

                            b1.Property<byte>("CardNumber")
                                .HasColumnType("smallint");

                            b1.Property<bool>("CardUsed")
                                .HasColumnType("boolean");

                            b1.HasKey("CharacterId", "Id");

                            b1.ToTable("UsedCard");

                            b1.WithOwner()
                                .HasForeignKey("CharacterId");
                        });

                    b.OwnsOne("BunkerGame.Domain.Characters.CharacterComponents.Childbearing", "Childbearing", b1 =>
                        {
                            b1.Property<int>("CharacterId")
                                .HasColumnType("integer");

                            b1.Property<bool>("CanGiveBirth")
                                .HasColumnType("boolean");

                            b1.HasKey("CharacterId");

                            b1.ToTable("Characters");

                            b1.WithOwner()
                                .HasForeignKey("CharacterId");
                        });

                    b.OwnsOne("BunkerGame.Domain.Characters.CharacterComponents.Sex", "Sex", b1 =>
                        {
                            b1.Property<int>("CharacterId")
                                .HasColumnType("integer");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("CharacterId");

                            b1.ToTable("Characters");

                            b1.WithOwner()
                                .HasForeignKey("CharacterId");
                        });

                    b.OwnsOne("BunkerGame.Domain.Characters.CharacterComponents.Size", "Size", b1 =>
                        {
                            b1.Property<int>("CharacterId")
                                .HasColumnType("integer");

                            b1.Property<double>("Height")
                                .HasColumnType("double precision");

                            b1.Property<double>("Weight")
                                .HasColumnType("double precision");

                            b1.HasKey("CharacterId");

                            b1.ToTable("Characters");

                            b1.WithOwner()
                                .HasForeignKey("CharacterId");
                        });

                    b.Navigation("AdditionalInformation");

                    b.Navigation("Age")
                        .IsRequired();

                    b.Navigation("Childbearing")
                        .IsRequired();

                    b.Navigation("GameSession");

                    b.Navigation("Health");

                    b.Navigation("Hobby");

                    b.Navigation("Phobia");

                    b.Navigation("Profession");

                    b.Navigation("Sex")
                        .IsRequired();

                    b.Navigation("Size")
                        .IsRequired();

                    b.Navigation("Trait");

                    b.Navigation("UsedCards");
                });

            modelBuilder.Entity("BunkerGame.Domain.Characters.CharacterComponents.Card", b =>
                {
                    b.OwnsOne("BunkerGame.Domain.Characters.CharacterComponents.Cards.CardMethod", "CardMethod", b1 =>
                        {
                            b1.Property<int>("CardId")
                                .HasColumnType("integer");

                            b1.Property<int?>("ItemId")
                                .HasColumnType("integer");

                            b1.Property<string>("MethodDirection")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)");

                            b1.Property<string>("MethodType")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)");

                            b1.HasKey("CardId");

                            b1.ToTable("Cards");

                            b1.WithOwner()
                                .HasForeignKey("CardId");
                        });

                    b.Navigation("CardMethod")
                        .IsRequired();
                });

            modelBuilder.Entity("BunkerGame.Domain.Characters.CharacterComponents.Profession", b =>
                {
                    b.HasOne("BunkerGame.Domain.Characters.CharacterComponents.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId");

                    b.HasOne("BunkerGame.Domain.Characters.CharacterComponents.CharacterItem", "CharacterItem")
                        .WithMany()
                        .HasForeignKey("CharacterItemId");

                    b.Navigation("Card");

                    b.Navigation("CharacterItem");
                });

            modelBuilder.Entity("BunkerGame.Domain.GameSessions.GameSession", b =>
                {
                    b.HasOne("BunkerGame.Domain.Catastrophes.Catastrophe", "Catastrophe")
                        .WithMany()
                        .HasForeignKey("CatastropheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catastrophe");
                });

            modelBuilder.Entity("BunkerItemBunker", b =>
                {
                    b.HasOne("BunkerGame.Domain.Bunkers.Bunker", null)
                        .WithMany()
                        .HasForeignKey("BunkersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BunkerGame.Domain.Bunkers.BunkerComponents.ItemBunker", null)
                        .WithMany()
                        .HasForeignKey("ItemBunkersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CardCharacter", b =>
                {
                    b.HasOne("BunkerGame.Domain.Characters.CharacterComponents.Card", null)
                        .WithMany()
                        .HasForeignKey("CardsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BunkerGame.Domain.Characters.Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CharacterCharacterItem", b =>
                {
                    b.HasOne("BunkerGame.Domain.Characters.CharacterComponents.CharacterItem", null)
                        .WithMany()
                        .HasForeignKey("CharacterItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BunkerGame.Domain.Characters.Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExternalSurroundingGameSession", b =>
                {
                    b.HasOne("BunkerGame.Domain.GameSessions.ExternalSurroundings.ExternalSurrounding", null)
                        .WithMany()
                        .HasForeignKey("ExternalSurroundingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BunkerGame.Domain.GameSessions.GameSession", null)
                        .WithMany()
                        .HasForeignKey("GameSessionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BunkerGame.Domain.GameSessions.GameSession", b =>
                {
                    b.Navigation("Bunker")
                        .IsRequired();

                    b.Navigation("Characters");
                });

            modelBuilder.Entity("BunkerGame.Domain.Players.Player", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
